name: Build CI/CD

on:
  push:
    branches:
      - main

env:
  URL: 'https://cloud-courses.local'
  BASE_URL: '/'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: yarn install --audit
        working-directory: website

      - name: Build
        run: yarn build
        working-directory: website

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: website/build
          retention-days: 1

  deploy:
    # Specify the OS for the runner
    runs-on: ubuntu-latest

    # Grant write permissions to access repository contents and GitHub Container Registry
    permissions:
      contents: write
      packages: write

    # Run this job only after the 'build' job completes successfully
    needs: build
    if: success()

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      # Step 2: Log in to GitHub Container Registry (GHCR) using GitHub Actions token
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}             # GitHub username (actor triggering the workflow)
          password: ${{ secrets.GITHUB_TOKEN }}     # Automatically provided GitHub token

      # Step 4: Build the Docker image and tag it with the repository name and 'latest'
      - name: Build Docker image
        run: docker build -t ghcr.io/alexander1752/cloud_courses:latest .

      # Step 5: Push the Docker image to GitHub Container Registry
      - name: Push Docker image
        run: docker push ghcr.io/alexander1752/cloud_courses:latest